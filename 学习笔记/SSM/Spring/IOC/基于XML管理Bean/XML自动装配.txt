1、什么是自动装配
    根据指定的策略，在IOC容器中匹配某一个bean，自动为指定的bean中所依赖的类类型或接口类型属性赋值

2、自动装配策略：
    即指定autowire属性的值
          1、no，default：表示不装配，即bean中的属性不会自动匹配某个bean为属性赋值，此时属性使用默认值
          2、byType：根据要赋值的属性的类型，在IOC容器中匹配某个bean，为属性赋值
          注意：
              >若通过类型没有找到任何一个类型匹配的bean，此时不装配，属性使用默认值
              >若通过类型找到了多个类型匹配的bean，此时会抛出异常：NoUniqueBeanDefinitionException
          总结：当使用byType实现自动装配时，IOC容器中有且只有一个类型匹配的bean能够为属性赋值
          3、byName：将要赋值的属性的属性名作为bean的id在IOC容器中匹配某个bean，为属性赋值
          总结：当类型匹配的bean有多个时，此时可以使用byName实现自动装配

3、三层架构通过自动装配的实现
    <bean id="userController" class="com.lxw.spring.controller.UserController" autowire="byType"></bean>

    <bean id="userService" class="com.lxw.spring.service.impl.UserServiceImpl" autowire="byType"></bean>

    <bean id="service" class="com.lxw.spring.service.impl.UserServiceImpl" autowire="byType"></bean>

    <bean id="userDaoImpl" class="com.lxw.spring.dao.impl.UserDaoImpl"></bean>

    <bean id="dao" class="com.lxw.spring.dao.impl.UserDaoImpl"></bean>

4、测试
        @Test
        public void testAutowire(){
            ApplicationContext ioc = new ClassPathXmlApplicationContext("spring-autowire-xml.xml");
            UserController userController = ioc.getBean(UserController.class);
            userController.saveUser();
        }