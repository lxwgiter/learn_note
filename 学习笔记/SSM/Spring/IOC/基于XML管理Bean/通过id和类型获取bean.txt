1、ApplicationContext对象的getBean方法
    该方法提供了三种重载的形式：
    ①getBean(String id)
    ②getBean(Class<T> Type)
    ③getBean(String id,Class<T> Type)
    所以获取IOC中的bean对象共有三种方式。

2、三种方式：
     * 1、根据bean的id获取
     * 2、根据bean的类型获取
     * 注意：根据类型获取bean时，要求IOC容器中有且只有一个类型匹配的bean
     * 若没有任何一个类型匹配的bean，此时抛出异常：NoSuchBeanDefinitionException
     * 若有多个类型匹配的bean，此时抛出异常：NoUniqueBeanDefinitionException
     * 3、根据bean的id和类型获取
     * 结论：
     * 根据类型来获取bean时，在满足bean唯一性的前提下
     * 其实只是看：『对象 instanceof 指定的类型』的返回结果
     * 只要返回的是true就可以认定为和类型匹配，能够获取到。
     * 即通过bean的类型、bean所继承的类的类型、bean所实现的接口的类型都可以获取bean

3、根据类型获取Bean拓展
    如果组件类实现了接口，根据接口类型可以获取 bean 吗？
    可以，前提是bean唯一
    如果一个接口有多个实现类，这些实现类都配置了 bean，根据接口类型可以获取 bean 吗？
    不行，因为bean不唯一




















