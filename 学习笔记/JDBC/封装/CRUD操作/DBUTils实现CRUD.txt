均在BaseDAO中实现
1、增删改
    public int update(String sql, Object... params) {
        Connection conn = JdbcUtils.getConnection();
        int count = 0;
        try {
            count = queryRunner.update(conn, sql, params);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new RuntimeException(e);
        }
        return count;
    }

2、单条查询
    public T getBean(String sql, Object... params) {
        Connection conn = JdbcUtils.getConnection();
        T t = null;
        try {
            t = queryRunner.query(conn, sql, new BeanHandler<T>(type), params);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new RuntimeException(e);
        }
        return t;
    }

3、多条查询
    public List<T> getBeanList(String sql, Object... params) {
        Connection conn = JdbcUtils.getConnection();
        List<T> list = null;
        try {
            list = queryRunner.query(conn, sql, new BeanListHandler<T>(type),params);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new RuntimeException(e);
        }
        return list;
    }

4、特殊查询
    public Object getValue(String sql, Object... params) {
        Connection conn = JdbcUtils.getConnection();
        Object count = null;
        try {
            // 调用queryRunner的query方法获取一个单一的值
            count = queryRunner.query(conn, sql, new ScalarHandler<>(), params);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new RuntimeException(e);
        }
        return count;
    }