四、Servlet部分：
    1、什么是 Servlet
        ①、Servlet 是 JavaEE 规范之一。规范就是接口
        ②、Servlet 就 JavaWeb 三大组件之一。三大组件分别是：Servlet 程序、Filter 过滤器、Listener 监听器。
        ③、Servlet 是运行在服务器上的一个 java 小程序，它可以接收客户端发送过来的请求，并响应数据给客户端。

    2、servlet的生命周期：
        ①、执行 Servlet 构造器方法
        ②、执行 init 初始化方法
            第一、二步，是在第一次访问，的时候创建 Servlet 程序会调用。
        ③、执行 service 方法
            第三步，每次访问都会调用。
        ④、执行 destroy 销毁方法
        第四步，在 web 工程停止的时候调用。
    3、手动实现 Servlet 程序
                ------》需要导入Tomcat/lib/server-api.jar
        核心：html页面通过from标签的action属性到WEB-INF下的web.xml配置文件中可以找到对应的servlet组件
        web.xml介绍：----》详细见Servlet.pdf
            <?xml version="1.0" encoding="UTF-8"?>
            <web-app >
                <servlet>
                    <servlet-name>Servlet类的别名</servlet-name>
                    <servlet-class>Servlet类的全类名</servlet-class>
                </servlet>
                <servlet-mapping>
                    <servlet-name>类的别名</servlet-name>
                    <url-pattern>/访问地址</url-pattern>
				 <url-pattern>可以设置多个，只要有一个匹配的就行
                </servlet-mapping>
            </web-app>
        方式一：实现Servlet接口的方式-----》不用这种方式
              ①、编写一个类去实现 Servlet 接口
              ②、实现 service 方法，处理请求，并响应数据
              ③、到 web.xml 中去配置 servlet 程序的访问地址
                详细见Servlet.pdf
        方式二：通过继承 HttpServlet 实现 Servlet 程序---》重点
            ①、编写一个类去继承 HttpServlet 类
            ②、根据业务需要重写 doGet 或 doPost 方法
            ③、到 web.xml 中的配置 Servlet 程序的访问地址
            ---->详细步骤见pdf
            快捷的创建方式：
                直接new servlet即可，这种方式只需补充两个方法的方法体，配置<servet-mapping>即可

    4、Servlet 类的继承体系
            Interface Servlet(接口)---->Class GenericServlet(对Servlet做了空实现)---
                --->Class HttpServlet(继承了GenericServlet)---->自定义类(需要实现HttpServlet)

    5、ServletConfig 类
      介绍：
        ①ServletConfig 类从类名上来看，就知道是 Servlet 程序的配置信息类。
        ②Servlet 程序和 ServletConfig 对象都是由 Tomcat 负责创建，我们负责使用。
        ③Servlet 程序默认是第一次访问的时候创建，ServletConfig 是每个 Servlet 程序创建时，
          就创建一个对应的 ServletConfig 对象。
      三大作用：
         ①、可以获取 Servlet 程序的别名 servlet-name 的值
         ②、获取初始化参数 init-param
         ③、获取 ServletContext 对象
                    ---》ServletContext context = getServletConfig().getServletContext();
         xml中<init-param>标签格式
            <init-param>
                <param-name>username</param-name>
                <param-value>root</param-value>
            </init-param>
            <init-param>
                <param-name>url</param-name>
                <param-value>jdbc:mysql://localhost:3306/test</param-value>
            </init-param>

    6、ServletContext 类
        什么是ServletContext？
            ①、ServletContext 是一个接口，它表示 Servlet 上下文对象
            ②、一个 web 工程，只有一个 ServletContext 对象实例。
            ③、ServletContext 对象是一个域对象。
            ④、ServletContext 是在 web 工程部署启动的时候创建。在 web 工程停止的时候销毁。
        什么是域对象？
            域对象，是可以像 Map 一样存取数据的对象，叫域对象。
            这里的域指的是存取数据的操作范围，整个 web 工程。
        ServletContext和Map的方法：
                        存数据           取数据              删除数据
            Map         put()           get()              remove()
            域对象       setAttribute()  getAttribute()     removeAttribute();
        ServletContext 类的四个作用：
            ①、获取 web.xml 中配置的上下文参数 context-param
                    ---》 context.getInitParameter("参数名")
            ②、获取当前的工程路径，格式: /工程路径
                    ---》context.getContextPath()
            ③、获取工程部署后在服务器硬盘上的绝对路径
                    ---》 context.getRealPath("/")
            ④、像 Map 一样存取数据

          <context-param>标签：
            <context-param>
                <param-name>username</param-name>
                <param-value>context</param-value>
            </context-param>