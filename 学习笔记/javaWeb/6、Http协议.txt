五、HTTP协议
    1、什么是 HTTP 协议？
           所谓 HTTP 协议，就是指，客户端和服务器之间通信时，发送的数据，需要遵守的规则，叫 HTTP 协议。
        HTTP 协议中的数据又叫报文。

    2、请求的 HTTP 协议格式
        客户端给服务器发送数据叫请求。
        服务器给客户端回传数据叫响应。
        请求又分为 GET 请求，和 POST 请求两种

        一、GET请求：
            ①、请求行
                (1) 请求的方式 GET
                (2) 请求的资源路径[+?+请求参数]
                (3) 请求的协议的版本号 HTTP/1.1
            ②、请求头
                key : value 组成 不同的键值对，表示不同的含义。

        二、POST请求：
            ①、请求行
                (1) 请求的方式 POST
                (2) 请求的资源路径[+?+请求参数]
                (3) 请求的协议的版本号 HTTP/1.1
            ②、请求头
                1) key : value 不同的请求头，有不同的含义
            “空行”
            ③、请求体 ===>>> 就是发送给服务器的数据

        三、常见请求头的说明:
            Accept: 表示客户端可以接收的数据类型
            Accpet-Languege: 表示客户端可以接收的语言类型
            User-Agent: 表示客户端浏览器的信息
            Host： 表示请求时的服务器 ip 和端口号

        四、哪些是 GET  请求，哪些是 POST
            GET 请求有哪些：
                ①、form 标签 method=get
                ②、a 标签
                ③、link 标签引入 css
                ④、Script 标签引入 js 文件
                ⑤、img 标签引入图片
                ⑥、iframe 引入 html 页面
                ⑦、在浏览器地址栏中输入地址后敲回车
            POST 请求有哪些：
                ①、form 标签 method=post

    3、响应的 HTTP 协议格式
        ①、响应行
            (1) 响应的协议和版本号
            (2) 响应状态码
            (3) 响应状态描述符
        ②、响应头
            (1) key : value 不同的响应头，有其不同含义
        “空行”
        ③、响应体 ---->>> 就是回传给客户端的数据

    4、常用的响应码说明
        200 表示请求成功
        302 表示请求重定向
        404 表示请求服务器已经收到了，但是你要的数据不存在（请求地址错误）
        500 表示服务器已经收到请求，但是服务器内部错误（代码错误）

    5、MIME 类型说明
        MIME 是 HTTP 协议中数据类型。
        MIME 的英文全称是"Multipurpose Internet Mail Extensions" 多功能 Internet 邮件扩充服务。
        MIME 类型的格式是“大类型/小类型”，并与某一种文件的扩展名相对应。

        常见的 MIME 类型：
            超文本标记语言文本       .html,.htm     text/html
            普通文本               .txt           text/plain
            GIF 图形              .gif            image/gif
            JPEG 图形             .jpeg,.jpg      image/jpeg

    如何在Chrome中查看Http请求和响应，以及详细的知识点，见servlet-1.pdf

六、Servlet及Http续
    1、HttpServletRequest 类
        ①HttpServletRequest 类有什么作用？
              每次只要有请求进入 Tomcat 服务器，Tomcat 服务器就会把请求过来的 HTTP 协议信息解析好封装到 Request 对象中。
            然后传递到 service 方法（doGet 和 doPost）中给我们使用。我们可以通过 HttpServletRequest 对象，获取到所有请求的
            信息。
        ②HttpServletRequest 类的常用方法
            i.  getRequestURI()     获取请求的资源路径
            ii. getRequestURL()     获取请求的统一资源定位符（绝对路径）
            iii. getRemoteHost()    获取客户端的 ip 地址
            iv.  getHeader()        获取请求头
            v.   getParameter()     获取请求的参数
            vi.  getParameterValues()   获取请求的参数（多个值的时候使用，比如多选框）
            vii. getMethod()            获取请求的方式 GET 或 POST
            viii. setAttribute(key, value); 设置域数据
            ix.   getAttribute(key);        获取域数据
            x.    getRequestDispatcher()    获取请求转发对象

        ③请求中中文乱码的解决：
              getParameter()及getParameterValues()，接收从浏览器获取的参数，中间存在字符集的转换问题
            且GET请求和POST请求的解决方式不同，主要还是取决于两者通过http协议的传输方式不同
                1、GET请求：在传输过程中以iso8859-1进行编码，读取时需要用utf-8解码
                    参数名 = new String(参数名.getBytes("iso-8859-1"), "UTF-8");
                    实测这段代码不可以加，总结就是GET请求不需要做字符集的转换
                2、POST请求：传输以二进制流进行，在所有操作之前先执行：
                    req.setCharacterEncoding("UTF-8");

        ④请求转发：
            getRequestDispatcher()    获取请求转发对象
                参数：以"/"开头，表示的是当前工程下的web目录
                RequestDispatcher requestDispatcher = req.getRequestDispatcher("/servlet2");
                requestDispatcher.forward(req,resp);
            特点：
                1、浏览器中的地址栏没有变化(使用相对路径进行页面跳转会失败，base标签可以解决，或者写绝对路径)
                2、他们是一次请求
                3、他们共享Request域中的数据
                4、可以转发到WEB-INF目录下，访问到受保护的内容(该目录http请求无法访问，转发可以间接访问)
                5、不可以通过转发访问外部资源

    2、web 中 / 斜杠的不同意义
        ①/ 斜杠 如果被浏览器解析，得到的地址是：http://ip:port/       <a href="/">斜杠</a>
        ②/ 斜杠 如果被服务器解析，得到的地址是：http://ip:port/工程路径
         1)、<url-pattern>/servlet1</url-pattern>
         2)、servletContext.getRealPath(“/”);
         3)、request.getRequestDispatcher(“/”);
         特殊情况： response.sendRediect(“/”); 把斜杠发送给浏览器解析。得到 http://ip:port/

    3、HttpServletResponse 类
        ①HttpServletResponse 类的作用
            HttpServletResponse 类和 HttpServletRequest 类一样。每次请求进来，Tomcat 服务器都会创建一个 Response 对象传
            递给 Servlet 程序去使用。HttpServletRequest 表示请求过来的信息，HttpServletResponse 表示所有响应的信息，
            我们如果需要设置返回给客户端的信息，都可以通过 HttpServletResponse 对象来进行设置
        ②两个输出流的说明
            字节流 getOutputStream(); 常用于下载（传递二进制数据）
            字符流 getWriter(); 常用于回传字符串（常用）,内容写在目标网页的源码里(其实是先写在response的缓冲区中)
            注：两个流同时只能使用一个。
            使用了字节流，就不能再使用字符流，反之亦然，否则就会报错。
        ③响应中文乱码的解决：
            在servlet最前面声明：
            resp.setContentType("text/html; charset=UTF-8");
            即可同时设置客户端和服务器的字符集为utf-8
        ④响应的重定向
              请求重定向，是指客户端给服务器发请求，然后服务器告诉客户端说。我给你一些地址。你去新地址访问。叫请求
            重定向（因为之前的地址可能已经被废弃）。
            用法：
                resp.sendRedirect("/新的servlet程序");没有返回值。
            特点：
            1、浏览器地址栏会发生变化
            2、是两次http请求
            3、不能共享Request域中的数据
            4、不能访问WEB-INF下的资源(因为是第二次http发出的请求)
            5、可以访问外部资源(相当于第二次Http请求外部资源)
